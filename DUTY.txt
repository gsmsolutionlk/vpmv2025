<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spreadsheet Data Viewer</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            line-height: 1.6;
        }
        h1 {
            color: #333;
        }
        .filter-section {
            background-color: #f5f5f5;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .filter-group {
            margin-bottom: 10px;
        }
        label {
            display: inline-block;
            width: 80px;
            font-weight: bold;
        }
        select, input {
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 3px;
        }
        button {
            padding: 5px 15px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            position: sticky;
            top: 0;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        tr:hover {
            background-color: #f1f1f1;
        }
        .loading {
            text-align: center;
            padding: 20px;
            font-style: italic;
            color: #666;
        }
    </style>
</head>
<body>
    <h1>EXAM DUTY</h1>
    
    <div class="filter-section">
        <div class="filter-group">
            <label for="nameFilter">Name:</label>
            <input type="text" id="nameFilter" placeholder="Example name...">
        </div>
        <div class="filter-group">
            <label for="dateFilter">Date:</label>
            <input type="text" id="dateFilter" placeholder="Example 7/21/2025...">
        </div>
        <div class="filter-group">
            <label for="classFilter">Class:</label>
            <select id="classFilter">
                <option value="">All Classes</option>
                <!-- Class options will be populated by JavaScript -->
            </select>
        </div>
        <button id="applyFilters">Apply Filters</button>
        <button id="resetFilters">Reset</button>
    </div>
    
    <div id="loading" class="loading">Loading data from spreadsheet...</div>
    
    <table id="dataTable">
        <thead>
            <tr>
                <th>Name</th>
                <th>Date</th>
                <th>Class</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            <!-- Data will be populated by JavaScript -->
        </tbody>
    </table>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const spreadsheetUrl = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQfFycq5TQ6SP8VTZoo3g7U2mHVunS2S64-7Yideh2_5hBn5k-3w-vm5kxFXxWBOMibL6RQuBw3eWME/pub?output=csv';
            let allData = [];
            
            // Fetch CSV data from Google Spreadsheet
            fetch(spreadsheetUrl)
                .then(response => response.text())
                .then(csvData => {
                    // Parse CSV data
                    const rows = csvData.split('\n');
                    const headers = rows[0].split(',');
                    
                    // Process each row (skip header row)
                    allData = rows.slice(1).map(row => {
                        const values = row.split(',');
                        return {
                            name: values[0] ? values[0].trim() : '',
                            date: values[1] ? values[1].trim() : '',
                            class: values[2] ? values[2].trim() : ''
                        };
                    });
                    
                    // Populate class filter dropdown
                    populateClassFilter(allData);
                    
                    // Display all data initially
                    renderTable(allData);
                    
                    // Hide loading message
                    document.getElementById('loading').style.display = 'none';
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                    document.getElementById('loading').textContent = 'Error loading data. Please try again later.';
                });
            
            // Set up filter event listeners
            document.getElementById('applyFilters').addEventListener('click', applyFilters);
            document.getElementById('resetFilters').addEventListener('click', resetFilters);
            
            // Also apply filters when pressing Enter in input fields
            document.getElementById('nameFilter').addEventListener('keyup', function(e) {
                if (e.key === 'Enter') applyFilters();
            });
            
            document.getElementById('dateFilter').addEventListener('keyup', function(e) {
                if (e.key === 'Enter') applyFilters();
            });
            
            // Function to populate class filter dropdown
            function populateClassFilter(data) {
                const classFilter = document.getElementById('classFilter');
                const classes = [...new Set(data.map(item => item.class))].filter(c => c);
                
                classes.sort();
                
                classes.forEach(cls => {
                    const option = document.createElement('option');
                    option.value = cls;
                    option.textContent = cls;
                    classFilter.appendChild(option);
                });
            }
            
            // Function to apply filters
            function applyFilters() {
                const nameFilter = document.getElementById('nameFilter').value.toLowerCase();
                const dateFilter = document.getElementById('dateFilter').value.toLowerCase();
                const classFilter = document.getElementById('classFilter').value;
                
                const filteredData = allData.filter(item => {
                    const nameMatch = item.name.toLowerCase().includes(nameFilter);
                    const dateMatch = item.date.toLowerCase().includes(dateFilter);
                    const classMatch = classFilter === '' || item.class === classFilter;
                    
                    return nameMatch && dateMatch && classMatch;
                });
                
                renderTable(filteredData);
            }
            
            // Function to reset all filters
            function resetFilters() {
                document.getElementById('nameFilter').value = '';
                document.getElementById('dateFilter').value = '';
                document.getElementById('classFilter').value = '';
                renderTable(allData);
            }
            
            // Function to render the table with data
            function renderTable(data) {
                const tableBody = document.getElementById('tableBody');
                tableBody.innerHTML = '';
                
                if (data.length === 0) {
                    const row = document.createElement('tr');
                    const cell = document.createElement('td');
                    cell.colSpan = 3;
                    cell.textContent = 'No data found matching your filters';
                    row.appendChild(cell);
                    tableBody.appendChild(row);
                    return;
                }
                
                data.forEach(item => {
                    const row = document.createElement('tr');
                    
                    const nameCell = document.createElement('td');
                    nameCell.textContent = item.name;
                    row.appendChild(nameCell);
                    
                    const dateCell = document.createElement('td');
                    dateCell.textContent = item.date;
                    row.appendChild(dateCell);
                    
                    const classCell = document.createElement('td');
                    classCell.textContent = item.class;
                    row.appendChild(classCell);
                    
                    tableBody.appendChild(row);
                });
            }
        });
    </script>
</body>
</html>